>What happens when you initialize a repository? Why do you need to do it?

When I initalize a repository a hidden folder named .git is created within the repository folder. This folder contains the metadata required to track the changes i made to my repository. Intitializing the repository is necessary if I want to track my changes.

>How is the staging area different from the working directory and the repository? What value do you think it offers?

Staging is a platform where the files that a required to be tracked in a repositroy are stored. It is dofferent from the working directory and the repository. The staging area gives me the freedom to choose what files are needed to be tracked.

>How can you use the staging area to make sure you have one commit per logical change?
Any logical change I make, by modifying the files, can be associated with a single commit by posting the modified files in the staging area and then commiting.

>What are some situations when branches would be helpful in keeping your history organized? How would branches help?

If i want to try out a new experimental feature, or if i want to explore more things, or try out translations. Branches would help me keep things organized and always come back to what i was working on.

>How do the diagrams help you visualize the branch structure?

Diagrams help to visualize the entire commit history of my work. Without diagrams, I would not be able to view precicely what changes i've made and where. Having a diagram help me identify which commits are reachable.  

>What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
Merging helps us to incoporaten any changes we want to make without breaking it. After we have made sure that the experimental version we are working on is stable we can merge it into the main branch. Hence we can add new features. The diagram help to visualize how the structure is.
